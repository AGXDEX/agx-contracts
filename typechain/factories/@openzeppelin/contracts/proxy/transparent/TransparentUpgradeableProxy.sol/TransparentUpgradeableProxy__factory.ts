/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../../../../common";
import type {
  TransparentUpgradeableProxy,
  TransparentUpgradeableProxyInterface,
} from "../../../../../../@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol/TransparentUpgradeableProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260405162000ec138038062000ec1833981016040819052620000269162000458565b828162000036828260006200004d565b50620000449050826200008a565b505050620005cc565b6200005883620000e5565b600082511180620000665750805b1562000085576200008383836200012760201b620001791760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000b562000156565b604080516001600160a01b03928316815291841660208301520160405180910390a1620000e2816200018f565b50565b620000f08162000244565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606200014f838360405180606001604052806027815260200162000e9a60279139620002f8565b9392505050565b60006200018060008051602062000e7a83398151915260001b6200037760201b620001a51760201c565b546001600160a01b0316919050565b6001600160a01b038116620001fa5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b806200022360008051602062000e7a83398151915260001b6200037760201b620001a51760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6200025a816200037a60201b620001a81760201c565b620002be5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620001f1565b80620002237f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6200037760201b620001a51760201c565b6060600080856001600160a01b03168560405162000317919062000534565b600060405180830381855af49150503d806000811462000354576040519150601f19603f3d011682016040523d82523d6000602084013e62000359565b606091505b5090925090506200036d8683838762000389565b9695505050505050565b90565b6001600160a01b03163b151590565b60608315620003fa578251620003f2576001600160a01b0385163b620003f25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620001f1565b508162000406565b6200040683836200040e565b949350505050565b8151156200041f5781518083602001fd5b8060405162461bcd60e51b8152600401620001f1919062000552565b80516001600160a01b03811681146200045357600080fd5b919050565b6000806000606084860312156200046d578283fd5b62000478846200043b565b925062000488602085016200043b565b60408501519092506001600160401b0380821115620004a5578283fd5b818601915086601f830112620004b9578283fd5b815181811115620004ce57620004ce620005b6565b604051601f8201601f19908116603f01168101908382118183101715620004f957620004f9620005b6565b8160405282815289602084870101111562000512578586fd5b6200052583602083016020880162000587565b80955050505050509250925092565b600082516200054881846020870162000587565b9190910192915050565b60208152600082518060208401526200057381604085016020870162000587565b601f01601f19169190910160400192915050565b60005b83811015620005a45781810151838201526020016200058a565b83811115620000835750506000910152565b634e487b7160e01b600052604160045260246000fd5b61089e80620005dc6000396000f3fe60806040523661001357610011610017565b005b6100115b61001f6101b7565b6001600160a01b0316336001600160a01b0316141561016f5760606001600160e01b031960003516631b2ce7f360e11b8114156100655761005e6101d8565b9150610167565b6001600160e01b0319811663278f794360e11b14156100865761005e61022f565b6001600160e01b031981166308f2839760e41b14156100a75761005e610275565b6001600160e01b031981166303e1469160e61b14156100c85761005e6102a6565b6001600160e01b03198116635c60da1b60e01b14156100e95761005e6102e6565b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b815160208301f35b6101776102fa565b565b606061019e83836040518060600160405280602781526020016108426027913961030a565b9392505050565b90565b6001600160a01b03163b151590565b60006000805160206108028339815191525b546001600160a01b0316919050565b60606101e2610382565b60006101f13660048184610797565b8101906101fe9190610672565b905061021b8160405180602001604052806000815250600061038d565b505060408051602081019091526000815290565b60606000806102413660048184610797565b81019061024e919061068c565b9150915061025e8282600161038d565b604051806020016040528060008152509250505090565b606061027f610382565b600061028e3660048184610797565b81019061029b9190610672565b905061021b816103b9565b60606102b0610382565b60006102ba6101b7565b604080516001600160a01b03831660208201529192500160405160208183030381529060405291505090565b60606102f0610382565b60006102ba610410565b610177610305610410565b61041f565b6060600080856001600160a01b0316856040516103279190610748565b600060405180830381855af49150503d8060008114610362576040519150601f19603f3d011682016040523d82523d6000602084013e610367565b606091505b509150915061037886838387610443565b9695505050505050565b341561017757600080fd5b610396836104bf565b6000825111806103a35750805b156103b4576103b28383610179565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103e26101b7565b604080516001600160a01b03928316815291841660208301520160405180910390a161040d816104ff565b50565b600061041a610596565b905090565b3660008037600080366000845af43d6000803e80801561043e573d6000f35b3d6000fd5b606083156104ad5782516104a65761045a856101a8565b6104a65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161015e565b50816104b7565b6104b783836105ac565b949350505050565b6104c8816105d6565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b0381166105645760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b606482015260840161015e565b806000805160206108028339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b60006000805160206108228339815191526101c9565b8151156105bc5781518083602001fd5b8060405162461bcd60e51b815260040161015e9190610764565b6105df816101a8565b6106415760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161015e565b80600080516020610822833981519152610575565b80356001600160a01b038116811461066d57600080fd5b919050565b600060208284031215610683578081fd5b61019e82610656565b6000806040838503121561069e578081fd5b6106a783610656565b915060208301356001600160401b03808211156106c2578283fd5b818501915085601f8301126106d5578283fd5b8135818111156106e7576106e76107eb565b604051601f8201601f19908116603f0116810190838211818310171561070f5761070f6107eb565b81604052828152886020848701011115610727578586fd5b82602086016020830137856020848301015280955050505050509250929050565b6000825161075a8184602087016107bf565b9190910192915050565b60208152600082518060208401526107838160408501602087016107bf565b601f01601f19169190910160400192915050565b600080858511156107a6578182fd5b838611156107b2578182fd5b5050820193919092039150565b60005b838110156107da5781810151838201526020016107c2565b838111156103b25750506000910152565b634e487b7160e01b600052604160045260246000fdfeb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200d384d69dac1d4503b2e5448d23ed95df589f7e018ab2b3f760e1eba86da5eb164736f6c63430008040033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type TransparentUpgradeableProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransparentUpgradeableProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransparentUpgradeableProxy__factory extends ContractFactory {
  constructor(...args: TransparentUpgradeableProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _logic: AddressLike,
    admin_: AddressLike,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_logic, admin_, _data, overrides || {});
  }
  override deploy(
    _logic: AddressLike,
    admin_: AddressLike,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_logic, admin_, _data, overrides || {}) as Promise<
      TransparentUpgradeableProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TransparentUpgradeableProxy__factory {
    return super.connect(runner) as TransparentUpgradeableProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransparentUpgradeableProxyInterface {
    return new Interface(_abi) as TransparentUpgradeableProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TransparentUpgradeableProxy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TransparentUpgradeableProxy;
  }
}
